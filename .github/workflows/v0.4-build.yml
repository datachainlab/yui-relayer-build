name: build@v0.4
on: [push, pull_request]

env:
  CACHE_BIN_RELAYER_KEY: bin-relayer
  CACHE_BIN_RELAYER_PATH: ./build/yrly
  CACHE_DOCKER_ETHEREUM_GANACHE_KEY: docker-ethereum-ganache
  CACHE_DOCKER_ETHEREUM_GANACHE_DIR: /tmp/ethereum/ganache
  CACHE_DOCKER_FABRIC_KEY: docker-fabric
  CACHE_DOCKER_FABRIC_DIR: /tmp/fabric
  CACHE_DOCKER_CORDA_KEY: docker-corda
  CACHE_DOCKER_CORDA_DIR: /tmp/corda
  CACHE_DOCKER_TENDERMINT_KEY: docker-tendermint
  CACHE_DOCKER_TENDERMINT_DIR: /tmp/tendermint
  CACHE_DOCKER_ETHEREUM_KEY: docker-ethereum
  CACHE_DOCKER_ETHEREUM_DIR: /tmp/ethereum
  CACHE_DOCKER_BSC_KEY: docker-bsc
  CACHE_DOCKER_BSC_DIR: /tmp/bsc

jobs:
  relayer-build:
    name: relayer-build
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set up Go 1.20
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'
          check-latest: true
          cache: true
        id: go
      - name: Save relayer binary cache
        uses: actions/cache@v3
        id: cache-bin-relayer
        with:
          path: ${{ env.CACHE_BIN_RELAYER_PATH }}
          key: ${{ runner.os }}-${{ env.CACHE_BIN_RELAYER_KEY }}-${{ hashFiles('relayer/**', 'go.sum') }}
      - name: Build
        if: steps.cache-bin-relayer.outputs.cache-hit != 'true'
        run: make yrly

  tendermint-build:
    name: tendermint-build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache-docker-tendermint
        with:
          path: ${{ env.CACHE_DOCKER_TENDERMINT_DIR }}
          key: ${{ runner.os }}-${{ env.CACHE_DOCKER_TENDERMINT_KEY }}-${{ hashFiles('tests/chains/tendermint/**', '!**/.git/**') }}
      - name: Build docker images
        if: steps.cache-docker-tendermint.outputs.cache-hit != 'true'
        working-directory: ./tests/chains/tendermint
        run: |
          make docker-images
      - name: Save docker images
        if: steps.cache-docker-tendermint.outputs.cache-hit != 'true'
        working-directory: ./tests/scripts
        run: |
          ./save_docker_images $CACHE_DOCKER_TENDERMINT_DIR tendermint-chain0:latest tendermint-chain1:latest

  ethereum-build:
    name: ethereum-build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache-docker-ethereum
        with:
          path: ${{ env.CACHE_DOCKER_ETHEREUM_DIR }}
          key: ${{ runner.os }}-${{ env.CACHE_DOCKER_ETHEREUM_KEY }}-${{ hashFiles('tests/chains/ethereum/**', '!**/.git/**') }}
      - name: Build docker images
        if: steps.cache-docker-ethereum.outputs.cache-hit != 'true'
        working-directory: ./tests/chains/ethereum
        run: |
          make docker-images
      - name: Save docker images
        if: steps.cache-docker-ethereum.outputs.cache-hit != 'true'
        working-directory: ./tests/scripts
        run: |
          ./save_docker_images $CACHE_DOCKER_ETHEREUM_DIR ethereum-ganache0:latest ethereum-ganache1:latest

  bsc-build:
    name: bsc-build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: cache-docker-bsc
        with:
          path: ${{ env.CACHE_DOCKER_BSC_DIR }}
          key: ${{ runner.os }}-${{ env.CACHE_DOCKER_BSC_KEY }}-${{ hashFiles('tests/chains/bsc/**', '!**/.git/**') }}
      - name: Build docker images
        if: steps.cache-docker-bsc.outputs.cache-hit != 'true'
        working-directory: ./tests/chains/bsc
        run: |
          make docker-images
      - name: Save docker images
        if: steps.cache-docker-bsc.outputs.cache-hit != 'true'
        working-directory: ./tests/scripts
        run: |
          ./save_docker_images $CACHE_DOCKER_BSC_DIR bsc-rpc:latest bsc-bootstrap:latest