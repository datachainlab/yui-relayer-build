#!/usr/bin/env bash
set -eux

ARG1=$1

DOCKER=docker
SCRIPT_DIR=$(cd $(dirname $0); pwd)
FIXTURES_DIR=${SCRIPT_DIR}/../fixtures
CONF_DIR=${SCRIPT_DIR}/../configs

# Setup test fixtures

set +x
rm -rf ${FIXTURES_DIR}
mkdir -p ${FIXTURES_DIR}/ethereum/ibc0
mkdir -p ${FIXTURES_DIR}/ethereum/ibc1
set -x

# retrieve the contract information from the container to the local
${DOCKER} cp ethereum-geth0:/root/abis ${FIXTURES_DIR}/ethereum/ibc0/abis
${DOCKER} cp ethereum-geth1:/root/abis ${FIXTURES_DIR}/ethereum/ibc1/abis

${DOCKER} cp ethereum-geth0:/root/addresses ${FIXTURES_DIR}/ethereum/ibc0/addresses
${DOCKER} cp ethereum-geth1:/root/addresses ${FIXTURES_DIR}/ethereum/ibc1/addresses

# assign the contract address to ChainConfig
mkdir -p "$CONF_DIR/chains"
for id in 0 1; do
  IBC_HANDLER_ADDRESS=`cat ${FIXTURES_DIR}/ethereum/ibc${id}/addresses/IBCHandler`
  MULTICALL3_ADDRESS=`cat ${FIXTURES_DIR}/ethereum/ibc${id}/addresses/Multicall3`
  if [ "$ARG1" = "multi" ]; then
    cat "$CONF_DIR/template/ibc-${id}.template.json" \
      | jq ".chain.ibc_address |= \"$IBC_HANDLER_ADDRESS\"" \
      | jq ".chain.multicall3_address |= \"$MULTICALL3_ADDRESS\"" \
      > "$CONF_DIR/chains/ibc-${id}.json"
  else
    cat "$CONF_DIR/template/ibc-${id}.template.json" \
      | jq ".chain.ibc_address |= \"$IBC_HANDLER_ADDRESS\"" \
      | jq ".chain.multicall3_address |= null" \
      > "$CONF_DIR/chains/ibc-${id}.json"
  fi
done
