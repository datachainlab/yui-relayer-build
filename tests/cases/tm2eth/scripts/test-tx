#!/bin/bash

set -eux

SCRIPT_DIR=$(cd $(dirname $0); pwd)
CONF_DIR=${SCRIPT_DIR}/../configs
RLY_BINARY=${SCRIPT_DIR}/../../../../build/yrly
RLY="${RLY_BINARY} --debug"

# ics20-cli
ICS20_CLI="ethereum-ics20-cli"
TMP_DIR=/tmp
if ! which ${ICS20_CLI} > /dev/null 2>&1; then
  if [ ! -d "${TMP_DIR}" ]; then
    mkdir -p ${TMP_DIR}
  fi
  git clone https://github.com/datachainlab/ethereum-ics20-cli.git ${TMP_DIR}/ethereum-ics20-cli
  cd ${TMP_DIR}/ethereum-ics20-cli
  git checkout v0.0.4
  go install
  export PATH=$PATH:$(go env GOPATH)/bin
fi

TX_INTERVAL=3

TM_ADDRESS=$(${RLY} tendermint keys show ibc0 testkey)

ICS20_BANK_ADDRESS="0xff77D90D6aA12db33d3Ba50A34fB25401f6e4c4F"

PATH_JSON=${CONF_DIR}/path.json
PORT_ID=$(jq -r '.dst."port-id"' ${PATH_JSON})
CHANNEL_ID=$(jq -r '.dst."channel-id"' ${PATH_JSON})

ETH_JSON=${CONF_DIR}/demo/ibc-1.json
RPC_ADDRESS=$(jq -r '.chain."rpc_addr"' ${ETH_JSON})
MNEMONIC=$(jq -r '.chain.signer.mnemonic' ${ETH_JSON})
ETH_ADDRESS=$(${ICS20_CLI} wallet address --mnemonic="${MNEMONIC}" --wallet-index=2)

DENOM="samoleans"

ETH_DENOM="${PORT_ID}/${CHANNEL_ID}/${DENOM}"

# ethereum balance
show_balance() {
  state=$1
  chain=$2
  user_wallet=$3
  denom=$4
  balance=$(${ICS20_CLI} ics20 balance --rpc-address=${chain} --ics20-bank-address=${ICS20_BANK_ADDRESS} --wallet-address=${user_wallet} --denom=${denom})
  echo "${state} ${chain} balance $balance"
}

echo "Before ibc0 balance: $(${RLY} query balance ibc0 ${TM_ADDRESS})"
show_balance Before ${RPC_ADDRESS} ${ETH_ADDRESS} ${ETH_DENOM}

echo "!!! ibc0 -> ibc1 !!!"

${RLY} tx transfer ibc01 ibc0 ibc1 100samoleans ${ETH_ADDRESS}
sleep ${TX_INTERVAL}
${RLY} tx relay ibc01 --src-seqs 1
sleep ${TX_INTERVAL}
${RLY} tx acks ibc01 --dst-seqs 1
sleep ${TX_INTERVAL}

echo "After ibc0 balance: $(${RLY} query balance ibc0 ${TM_ADDRESS})"
show_balance After ${RPC_ADDRESS} ${ETH_ADDRESS} ${ETH_DENOM}
